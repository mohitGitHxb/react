[{"C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\App.js":"2","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\components\\SimpleInput.js":"3","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\hooks\\use-input.js":"4","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":214,"mtime":1665923050104,"results":"8","hashOfConfig":"7"},{"size":1497,"mtime":1665921950191,"results":"9","hashOfConfig":"7"},{"size":1602,"mtime":1666439899879,"results":"10","hashOfConfig":"7"},{"size":2546,"mtime":1665923328301,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"eldguy",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\index.js",[],["26","27"],"C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\App.js",["28"],"import BasicForm from './components/BasicForm';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\components\\SimpleInput.js",["29"],"import react from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  // const [formIsValid, setFormIsValid] = useState(false);\n  let formIsValid = false;\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlur: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => {\n    return value.trim() !== \"\";\n  });\n\n  if (enteredNameIsValid) {\n    // setFormIsValid(true);\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\hooks\\use-input.js",["30","31"],"C:\\Users\\Admin\\Documents\\Web development\\react\\working-with-forms\\src\\components\\BasicForm.js",["32","33","34"],"import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: firstName,\n    isValid: firstNameIsValid,\n    hasError:firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlur: firstNameBlurHandler,\n    reset: firstNameReset,\n  } = useInput((val) => val.trim() !== \" \");\n  const {\n    value: lastName,\n    isValid: lastNameIsValid,\n    hasError:lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlur: lastNameBlurHandler,\n    reset: lastNameReset,\n  } = useInput((val) => val.trim() !== \" \");\n  \n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError:emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlur: emailBlurHandler,\n    reset: emailReset,\n  } =  useInput((val) => val.includes(\"@\"));\n\n\nlet formIsValid = false;\n\nif (firstNameIsValid && lastNameIsValid && emailIsValid) {\n  formIsValid = true;\n}\n\nconst firstNameClasses = !firstNameHasError ? 'form-control' : 'form-control invalid';\nconst lastNameClasses = !lastNameHasError ? 'form-control' : 'form-control invalid';\nconst emailClasses = !emailHasError ? 'form-control' : 'form-control invalid';\n\n\n  return (\n    <form onSubmit={(e)=>{e.preventDefault();if(!formIsValid)return; console.log(firstName,lastName,email)}}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\"\n          value={firstName}\n          onChange={firstNameChangeHandler}\n          onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">Please enter valid first name</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\"\n          value={lastName}\n          onChange={lastNameChangeHandler}\n          onBlur={lastNameBlurHandler}\n           />\n          {lastNameHasError&&<p className=\"error-text\">Please enter valid last name</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\"\n        value={email}\n        onChange={emailChangeHandler}\n        onBlur={emailBlurHandler}\n         />\n          {emailHasError&&<p className=\"error-text\">Please enter valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"44","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"45","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":35},{"ruleId":"39","severity":1,"message":"46","line":10,"column":12,"nodeType":"41","messageId":"42","endLine":10,"endColumn":26},{"ruleId":"39","severity":1,"message":"47","line":18,"column":12,"nodeType":"41","messageId":"42","endLine":18,"endColumn":25},{"ruleId":"39","severity":1,"message":"48","line":27,"column":12,"nodeType":"41","messageId":"42","endLine":27,"endColumn":22},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'firstNameReset' is assigned a value but never used.","'lastNameReset' is assigned a value but never used.","'emailReset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]